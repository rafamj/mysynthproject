//oscDiv.cc
//#include <math.h>
#include "oscDiv.h"

OscDiv::OscDiv():Device(si,1,out,OCTAVES,0,0,0,0){ //note note out[]
  for(int i=0;i<OCTAVES;i++) out[i]=MAX_VALUE;
  phase=0;
  delta=0;
  rem=0;
  //ticks=change=0;
}

void OscDiv::cycle() {
        //sample freq;
        phase++;
	if(phase>=z-delta) {
	  sample freq=getInput(0);
	  //freq=getInput(0);
          z=rate /freq;
#if SAMPLE_T==0	  
         if(delta>1) delta -=1;
         delta += (double) rate/freq - z;
#else
	  if(delta>freq) delta -=freq;
	  rem = rate %freq;
	  delta += rem;
#endif
	  printf("phase %d z %d delta %f rate %d freq %f\n",phase,z,delta,rate,freq);
	  phase=0;
	  out[0]*=-1;
	  setOutput(0,out[0]);
	  for(int i=1; i<OCTAVES; i++) {
	    if(out[i-1]==-MAX_VALUE) {
	      out[i]*=-1;
	      setOutput(i,out[i]);
	    } else {
	      break;
	    }
	  }
	  //change++;
	}
/*	
	ticks++;
	if(ticks>=freq*20) {
	  //printf("frec %f %f %f\n",((double)change*rate)/((double)ticks),freq,((double)change*rate/((double)ticks)-freq));
	  ticks=change=0;
	}
*/	
}

